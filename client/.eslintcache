[{"D:\\finalproject\\client\\src\\index.js":"1","D:\\finalproject\\client\\src\\reportWebVitals.js":"2","D:\\finalproject\\client\\src\\redux\\store.js":"3","D:\\finalproject\\client\\src\\App.js":"4","D:\\finalproject\\client\\src\\redux\\root.reducer.js":"5","D:\\finalproject\\client\\src\\util\\PrivateRoute.js":"6","D:\\finalproject\\client\\src\\layout\\home\\Home.js":"7","D:\\finalproject\\client\\src\\redux\\users\\user.actions.js":"8","D:\\finalproject\\client\\src\\layout\\misc\\alert\\Alert.js":"9","D:\\finalproject\\client\\src\\layout\\navbar\\Navbar.js":"10","D:\\finalproject\\client\\src\\modules\\developers\\developer-details\\DeveloperDetails.js":"11","D:\\finalproject\\client\\src\\modules\\developers\\developer-list\\DeveloperList.js":"12","D:\\finalproject\\client\\src\\modules\\users\\user-register\\UserRegister.js":"13","D:\\finalproject\\client\\src\\modules\\users\\user-login\\UserLogin.js":"14","D:\\finalproject\\client\\src\\modules\\profiles\\dashboard\\Dashboard.js":"15","D:\\finalproject\\client\\src\\modules\\profiles\\edit-profile\\EditProfile.js":"16","D:\\finalproject\\client\\src\\modules\\profiles\\create-profile\\CreateProfile.js":"17","D:\\finalproject\\client\\src\\modules\\profiles\\add-education\\AddEducation.js":"18","D:\\finalproject\\client\\src\\modules\\posts\\post-list\\PostList.js":"19","D:\\finalproject\\client\\src\\modules\\profiles\\add-experience\\AddExperience.js":"20","D:\\finalproject\\client\\src\\modules\\posts\\post-details\\PostDetails.js":"21","D:\\finalproject\\client\\src\\redux\\users\\user.reducer.js":"22","D:\\finalproject\\client\\src\\util\\userUtil.js":"23","D:\\finalproject\\client\\src\\redux\\alerts\\alert.reducer.js":"24","D:\\finalproject\\client\\src\\redux\\posts\\post.reducer.js":"25","D:\\finalproject\\client\\src\\redux\\profiles\\profile.reducer.js":"26","D:\\finalproject\\client\\src\\redux\\developers\\developer.reducer.js":"27","D:\\finalproject\\client\\src\\util\\authUtil.js":"28","D:\\finalproject\\client\\src\\redux\\profiles\\profile.actions.js":"29","D:\\finalproject\\client\\src\\redux\\alerts\\alert.actions.js":"30","D:\\finalproject\\client\\src\\redux\\developers\\developer.actions.js":"31","D:\\finalproject\\client\\src\\redux\\posts\\post.actions.js":"32","D:\\finalproject\\client\\src\\layout\\misc\\spinner\\Spinner.js":"33"},{"size":773,"mtime":1655360638397,"results":"34","hashOfConfig":"35"},{"size":362,"mtime":1655360638463,"results":"36","hashOfConfig":"35"},{"size":336,"mtime":1655360639443,"results":"37","hashOfConfig":"35"},{"size":2599,"mtime":1655360638283,"results":"38","hashOfConfig":"35"},{"size":703,"mtime":1655360639409,"results":"39","hashOfConfig":"35"},{"size":377,"mtime":1655360639917,"results":"40","hashOfConfig":"35"},{"size":961,"mtime":1655612807212,"results":"41","hashOfConfig":"35"},{"size":3292,"mtime":1655360639811,"results":"42","hashOfConfig":"35"},{"size":1285,"mtime":1655360638715,"results":"43","hashOfConfig":"35"},{"size":3029,"mtime":1655612901721,"results":"44","hashOfConfig":"35"},{"size":12176,"mtime":1655360638869,"results":"45","hashOfConfig":"35"},{"size":5712,"mtime":1655979166662,"results":"46","hashOfConfig":"35"},{"size":5342,"mtime":1655977947960,"results":"47","hashOfConfig":"35"},{"size":4288,"mtime":1655978093009,"results":"48","hashOfConfig":"35"},{"size":10397,"mtime":1655360639215,"results":"49","hashOfConfig":"35"},{"size":12267,"mtime":1655360639262,"results":"50","hashOfConfig":"35"},{"size":9236,"mtime":1655360639172,"results":"51","hashOfConfig":"35"},{"size":7691,"mtime":1655360639082,"results":"52","hashOfConfig":"35"},{"size":9383,"mtime":1655360639025,"results":"53","hashOfConfig":"35"},{"size":7707,"mtime":1655360639126,"results":"54","hashOfConfig":"35"},{"size":8925,"mtime":1655360638978,"results":"55","hashOfConfig":"35"},{"size":2805,"mtime":1655360639840,"results":"56","hashOfConfig":"35"},{"size":191,"mtime":1655360639957,"results":"57","hashOfConfig":"35"},{"size":659,"mtime":1655360639523,"results":"58","hashOfConfig":"35"},{"size":5353,"mtime":1655360639682,"results":"59","hashOfConfig":"35"},{"size":3920,"mtime":1655360639765,"results":"60","hashOfConfig":"35"},{"size":1580,"mtime":1655360639610,"results":"61","hashOfConfig":"35"},{"size":244,"mtime":1655360639889,"results":"62","hashOfConfig":"35"},{"size":7499,"mtime":1655360639726,"results":"63","hashOfConfig":"35"},{"size":532,"mtime":1655360639489,"results":"64","hashOfConfig":"35"},{"size":1525,"mtime":1655360639579,"results":"65","hashOfConfig":"35"},{"size":7212,"mtime":1655360639651,"results":"66","hashOfConfig":"35"},{"size":329,"mtime":1655360638760,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"hoix1g",{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"70"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"D:\\finalproject\\client\\src\\index.js",[],["143","144"],"D:\\finalproject\\client\\src\\reportWebVitals.js",[],"D:\\finalproject\\client\\src\\redux\\store.js",[],"D:\\finalproject\\client\\src\\App.js",["145"],"import React , {useEffect}from 'react';\nimport './App.css';\nimport {BrowserRouter as Router , Route , Switch} from 'react-router-dom';\nimport Navbar from \"./layout/navbar/Navbar\";\nimport Home from \"./layout/home/Home\";\nimport DeveloperList from \"./modules/developers/developer-list/DeveloperList\";\nimport UserRegister from \"./modules/users/user-register/UserRegister\";\nimport UserLogin from \"./modules/users/user-login/UserLogin\";\nimport DeveloperDetails from \"./modules/developers/developer-details/DeveloperDetails\";\nimport Alert from \"./layout/misc/alert/Alert\";\nimport Dashboard from \"./modules/profiles/dashboard/Dashboard\";\nimport * as userActions from './redux/users/user.actions';\nimport {useDispatch} from \"react-redux\";\nimport EditProfile from \"./modules/profiles/edit-profile/EditProfile\";\nimport CreateProfile from \"./modules/profiles/create-profile/CreateProfile\";\nimport AddExperience from \"./modules/profiles/add-experience/AddExperience\";\nimport AddEducation from \"./modules/profiles/add-education/AddEducation\";\nimport PostList from \"./modules/posts/post-list/PostList\";\nimport PostDetails from \"./modules/posts/post-details/PostDetails\";\nimport PrivateRoute from \"./util/PrivateRoute\";\n\nlet App = () => {\n    let dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(userActions.getUserInfo());\n    }, []);\n\n  return (\n    <React.Fragment>\n      <Router>\n          <Navbar/>\n          <Alert/>\n          <Switch>\n              <Route exact path=\"/\" component={Home}/>\n              <PrivateRoute exact path=\"/profiles/dashboard\" component={Dashboard}/>\n              <Route exact path=\"/developers\" component={DeveloperList}/>\n              <Route exact path=\"/developers/:developerId\" component={DeveloperDetails}/>\n              <Route exact path=\"/users/register\" component={UserRegister}/>\n              <Route exact path=\"/users/login\" component={UserLogin}/>\n              <PrivateRoute exact path=\"/profiles/edit-profile\" component={EditProfile}/>\n              <PrivateRoute exact path=\"/profiles/create-profile\" component={CreateProfile}/>\n              <PrivateRoute exact path=\"/profiles/edit-profile\" component={EditProfile}/>\n              <PrivateRoute exact path=\"/profiles/add-experience\" component={AddExperience}/>\n              <PrivateRoute exact path=\"/profiles/add-education\" component={AddEducation}/>\n              <PrivateRoute exact path=\"/posts/list\" component={PostList}/>\n              <PrivateRoute exact path=\"/posts/:postId\" component={PostDetails}/>\n          </Switch>\n      </Router>\n\n    </React.Fragment>\n  );\n}\nexport default App;\n","D:\\finalproject\\client\\src\\redux\\root.reducer.js",[],"D:\\finalproject\\client\\src\\util\\PrivateRoute.js",[],"D:\\finalproject\\client\\src\\layout\\home\\Home.js",[],"D:\\finalproject\\client\\src\\redux\\users\\user.actions.js",[],"D:\\finalproject\\client\\src\\layout\\misc\\alert\\Alert.js",[],"D:\\finalproject\\client\\src\\layout\\navbar\\Navbar.js",[],"D:\\finalproject\\client\\src\\modules\\developers\\developer-details\\DeveloperDetails.js",["146","147"],"import React , {useEffect} from 'react';\r\nimport {useParams , useHistory} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport * as developerActions from '../../../redux/developers/developer.actions';\r\nimport * as developerReducer from '../../../redux/developers/developer.reducer';\r\nimport Spinner from \"../../../layout/misc/spinner/Spinner\";\r\n\r\nlet DeveloperDetails = () => {\r\n    let dispatch = useDispatch();\r\n\r\n    let developerInfo = useSelector((state) => {\r\n        return state[developerReducer.developerFeatureKey];\r\n    });\r\n\r\n    let {loading , selectedProfile} = developerInfo;\r\n\r\n    let developerId = useParams().developerId;\r\n\r\n    useEffect(() => {\r\n        dispatch(developerActions.fetchDeveloper(developerId));\r\n    }, [developerId]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                loading ? <Spinner/> :\r\n                    <React.Fragment>\r\n                        {\r\n                            Object.keys(selectedProfile).length > 0 &&\r\n                            <React.Fragment>\r\n                                <section className=\"p-3\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row animated zoomIn\">\r\n                                            <div className=\"col\">\r\n                                                <p className=\"h3 text-teal\">\r\n                                                    <i className=\"fa fa-user-tie\"/> {selectedProfile.user.name}'s Profile </p>\r\n                                                <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Accusantium animi fugiat iusto laudantium rerum. Adipisci animi blanditiis, culpa expedita explicabo, fugiat incidunt labore nostrum omnis, praesentium sit temporibus tenetur velit!</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </section>\r\n                                <section>\r\n                                    <div className=\"container bg-teal text-white text-center p-3\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col\">\r\n                                                <img src={selectedProfile.user.avatar} alt=\"\" width=\"200\" height=\"200\" className=\"rounded-circle profile-img\"/>\r\n                                                <p className=\"h2\">{selectedProfile.user.name}</p>\r\n                                                <p className=\"h6\">{selectedProfile.designation}</p>\r\n                                                <p className=\"h6\">{selectedProfile.company}</p>\r\n                                                <p>{selectedProfile.location}</p>\r\n                                                <div className=\"d-flex flex-row justify-content-center\">\r\n                                                    <div className=\"p-2\">\r\n                                                        <i className=\"fab fa-facebook\"/>\r\n                                                    </div>\r\n                                                    <div className=\"p-2\">\r\n                                                        <i className=\"fab fa-twitter\"/>\r\n                                                    </div>\r\n                                                    <div className=\"p-2\">\r\n                                                        <i className=\"fab fa-linkedin\"/>\r\n                                                    </div>\r\n                                                    <div className=\"p-2\">\r\n                                                        <i className=\"fab fa-youtube\"/>\r\n                                                    </div>\r\n                                                    <div className=\"p-2\">\r\n                                                        <i className=\"fab fa-instagram\"/>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col text-center\">\r\n                                                <div className=\"card my-2\">\r\n                                                    <div className=\"card-body bg-light-grey text-teal\">\r\n                                                        <p className=\"h3\">{selectedProfile.user.name}'s Biography</p>\r\n                                                        <p>{selectedProfile.bio}</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col text-center\">\r\n                                                <div className=\"card my-2\">\r\n                                                    <div className=\"card-body bg-light-grey text-teal\">\r\n                                                        <p className=\"h3\">{selectedProfile.user.name}'s Skills</p>\r\n                                                        {\r\n                                                            selectedProfile.skills.map(skill => {\r\n                                                                return (\r\n                                                                    <span className=\"badge badge-dark p-2 m-2\">{skill}</span>\r\n                                                                )\r\n                                                            })\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-6\">\r\n                                                {\r\n                                                    selectedProfile.experience.length > 0 ?\r\n                                                        <React.Fragment>\r\n                                                            <div className=\"card\">\r\n                                                                <div className=\"card-body bg-light-grey\">\r\n                                                                    <p className=\"h3\">Experience</p>\r\n                                                                    <ul className=\"list-group\">\r\n                                                                        {\r\n                                                                            selectedProfile.experience.map(exp => {\r\n                                                                                return (\r\n                                                                                    <li className=\"list-group-item my-2\" key={exp._id}>\r\n                                                                                        <span>Title : {exp.title}</span><br/>\r\n                                                                                        <span>Company : {exp.company}</span><br/>\r\n                                                                                        <span>Location : {exp.location}</span><br/>\r\n                                                                                        <span>From : {exp.from}</span><br/>\r\n                                                                                        <span>To : {exp.to}</span><br/>\r\n                                                                                        <span>Description : {exp.description}</span><br/>\r\n                                                                                    </li>\r\n                                                                                )\r\n                                                                            })\r\n                                                                        }\r\n                                                                    </ul>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </React.Fragment> : null\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"col-md-6\">\r\n                                                {\r\n                                                    selectedProfile.experience.length > 0 ?\r\n                                                        <React.Fragment>\r\n                                                            <div className=\"card\">\r\n                                                                <div className=\"card-body bg-light-grey\">\r\n                                                                    <p className=\"h3\">Education</p>\r\n                                                                    <ul className=\"list-group\">\r\n                                                                        {\r\n                                                                            selectedProfile.education.map(edu => {\r\n                                                                                return (\r\n                                                                                    <li className=\"list-group-item my-2\" key={edu._id}>\r\n                                                                                        <span>School : {edu.school}</span><br/>\r\n                                                                                        <span>Degree : {edu.degree}</span><br/>\r\n                                                                                        <span>Field of Study : {edu.fieldOfStudy}</span><br/>\r\n                                                                                        <span>From : {edu.from}</span><br/>\r\n                                                                                        <span>To : {edu.to}</span><br/>\r\n                                                                                        <span>Description : {edu.description}</span><br/>\r\n                                                                                    </li>\r\n                                                                                )\r\n                                                                            })\r\n                                                                        }\r\n                                                                    </ul>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </React.Fragment> : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </section>\r\n                            </React.Fragment>\r\n                        }\r\n                    </React.Fragment>\r\n            }\r\n            <div style={{marginBottom : '150px'}}/>\r\n        </React.Fragment>\r\n    )\r\n};\r\nexport default DeveloperDetails;\r\n","D:\\finalproject\\client\\src\\modules\\developers\\developer-list\\DeveloperList.js",["148"],"import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport * as developerActions from '../../../redux/developers/developer.actions';\r\nimport * as developerReducer from '../../../redux/developers/developer.reducer';\r\nimport Spinner from \"../../../layout/misc/spinner/Spinner\";\r\n\r\nconst {useEffect} = require(\"react\");\r\n\r\nlet DeveloperList = () => {\r\n    let dispatch = useDispatch();\r\n\r\n    let developerInfo = useSelector((state) => {\r\n        return state[developerReducer.developerFeatureKey];\r\n    });\r\n\r\n    let {loading , profiles} = developerInfo;\r\n\r\n    useEffect(() => {\r\n        dispatch(developerActions.fetchAllDevelopers());\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <section className=\"p-3\">\r\n                <div className=\"container\">\r\n                    <div className=\"row animated zoomIn\">\r\n                        <div className=\"col\">\r\n                            <p className=\"h3 text-teal\">\r\n                               <i className=\"fa fa-user-tie\"/>Users</p>\r\n                            <p>All user  details comes here❤️</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section>\r\n                {\r\n                    loading ? <Spinner/> :\r\n                        <React.Fragment>\r\n                            {\r\n                                profiles.length > 0 ?\r\n                                    <React.Fragment>\r\n                                        <div className=\"container\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col\">\r\n                                                    {\r\n                                                        profiles.map(profile => {\r\n                                                            return (\r\n                                                                <div className=\"card my-2 animated zoomIn\" key={profile._id}>\r\n                                                                    <div className=\"card-body bg-light-grey\">\r\n                                                                        <div className=\"row\">\r\n                                                                            <div className=\"col-md-2\">\r\n                                                                                <img src={profile.user.avatar} className=\"img-fluid img-thumbnail\" alt=\"\"/>\r\n                                                                            </div>\r\n                                                                            <div className=\"col-md-5\">\r\n                                                                                <h2>{profile.user.name}</h2>\r\n                                                                                <small className=\"h6\">{profile.designation}</small><br/>\r\n                                                                                <small className=\"h6\">{profile.company}</small><br/>\r\n                                                                                <small>{profile.location}</small><br/>\r\n                                                                                <Link to={`/developers/${profile._id}`} className=\"btn btn-teal btn-sm\">View Profile</Link>\r\n                                                                            </div>\r\n                                                                            <div className=\"col-md-5\">\r\n                                                                                {\r\n                                                                                    profile.skills.length > 0 &&\r\n                                                                                        profile.skills.map((skill , index) => {\r\n                                                                                            return (\r\n                                                                                                <div key={index}>\r\n                                                                                                    <span className=\"badge badge-success p-2 m-1\">\r\n                                                                                                        <i className=\"fa fa-check-circle\"/> {skill}</span><br/>\r\n                                                                                                </div>\r\n                                                                                            )\r\n                                                                                        })\r\n                                                                                }\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </React.Fragment> : null\r\n                            }\r\n                        </React.Fragment>\r\n                }\r\n            </section>\r\n        </React.Fragment>\r\n    )\r\n};\r\nexport default DeveloperList;\r\n","D:\\finalproject\\client\\src\\modules\\users\\user-register\\UserRegister.js",[],"D:\\finalproject\\client\\src\\modules\\users\\user-login\\UserLogin.js",[],"D:\\finalproject\\client\\src\\modules\\profiles\\dashboard\\Dashboard.js",["149"],"import React, {useEffect} from 'react';\r\nimport * as userReducer from '../../../redux/users/user.reducer';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Spinner from \"../../../layout/misc/spinner/Spinner\";\r\nimport * as profileActions from '../../../redux/profiles/profile.actions';\r\nimport * as profileReducer from '../../../redux/profiles/profile.reducer';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nlet Dashboard = () => {\r\n    let dispatch = useDispatch();\r\n\r\n    let userInfo = useSelector((state) => {\r\n        return state[userReducer.usersFeatureKey];\r\n    });\r\n\r\n    let profileInfo = useSelector((state) => {\r\n        return state[profileReducer.profileFeatureKey];\r\n    });\r\n\r\n    let {profile, loading} = profileInfo;\r\n\r\n    useEffect(() => {\r\n        dispatch(profileActions.getProfile());\r\n    }, []);\r\n\r\n    let {user} = userInfo;\r\n\r\n    let clickDeleteExperience = (experienceId) => {\r\n        dispatch(profileActions.deleteExperience(experienceId));\r\n    };\r\n\r\n    let clickDeleteEducation = (educationId) => {\r\n        dispatch(profileActions.deleteEducation(educationId));\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                loading ? <Spinner/> :\r\n                    <React.Fragment>\r\n                        <section className=\"p-3\">\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        <p className=\"h3 text-teal\">\r\n                                            <i className=\"fa fa-sitemap\"/>\r\n                                            Dashboard\r\n                                        </p>\r\n                                        {\r\n                                            Object.keys(user).length > 0 &&\r\n                                            <p className=\"h5\">Welcome {user.name}</p>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n                    </React.Fragment>\r\n            }\r\n            {\r\n                Object.keys(profile).length > 0 ?\r\n                    <React.Fragment>\r\n                        <section>\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        <Link to=\"/profiles/edit-profile\" className=\"btn btn-light text-teal btn-sm\">\r\n                                           <i className=\"fa fa-user-cog\"/> Edit Profile</Link>\r\n                                        <Link to=\"/profiles/add-experience\" className=\"btn btn-light text-teal btn-sm\">\r\n                                            <i className=\"fa fa-user-tie\"/> Add Experience</Link>\r\n                                        <Link to=\"/profiles/add-education\" className=\"btn btn-light text-teal btn-sm\">\r\n                                            <i className=\"fa fa-graduation-cap\"/> Add Education</Link>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n                        {/* Experience Details */}\r\n                        <section>\r\n                            {\r\n                                profile.experience.length > 0 &&\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col\">\r\n                                            <p className=\"h3 text-teal\">Experience Details</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col\">\r\n                                            <table className=\"table table-hover text-center table-light table-striped\">\r\n                                                <thead className=\"bg-teal text-white\">\r\n                                                <tr>\r\n                                                    <th>Title</th>\r\n                                                    <th>Company</th>\r\n                                                    <th>Location</th>\r\n                                                    <th>From</th>\r\n                                                    <th>To</th>\r\n                                                    <th>Action</th>\r\n                                                </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                {\r\n                                                    profile.experience.map(exp => {\r\n                                                        return (\r\n                                                            <tr key={exp._id}>\r\n                                                                <td>{exp.title}</td>\r\n                                                                <td>{exp.company}</td>\r\n                                                                <td>{exp.location}</td>\r\n                                                                <td>{exp.from}</td>\r\n                                                                <td>{exp.to}</td>\r\n                                                                <td>\r\n                                                                    <button onClick={clickDeleteExperience.bind(this, exp._id)} className=\"btn btn-danger btn-sm\">Delete</button>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </section>\r\n                        {/* Education Details */}\r\n                        <section>\r\n                            {\r\n                                profile.education.length > 0 &&\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col\">\r\n                                            <p className=\"h3 text-teal\">Education Details</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col\">\r\n                                            <table className=\"table table-hover text-center table-light table-striped\">\r\n                                                <thead className=\"bg-teal text-white\">\r\n                                                <tr>\r\n                                                    <th>School</th>\r\n                                                    <th>Degree</th>\r\n                                                    <th>Field Of Study</th>\r\n                                                    <th>From</th>\r\n                                                    <th>To</th>\r\n                                                    <th>Action</th>\r\n                                                </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                {\r\n                                                    profile.education.map(edu => {\r\n                                                        return (\r\n                                                            <tr key={edu._id}>\r\n                                                                <td>{edu.school}</td>\r\n                                                                <td>{edu.degree}</td>\r\n                                                                <td>{edu.fieldOfStudy}</td>\r\n                                                                <td>{edu.from}</td>\r\n                                                                <td>{edu.to}</td>\r\n                                                                <td>\r\n                                                                    <button onClick={clickDeleteEducation.bind(this, edu._id)} className=\"btn btn-danger btn-sm\">Delete</button>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </section>\r\n                    </React.Fragment> :\r\n                    <React.Fragment>\r\n                        <section>\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        <small>You don't have a profile yet! , please create one.</small><br/>\r\n                                        <Link to=\"/profiles/create-profile\" className=\"btn btn-light text-teal btn-sm\">\r\n                                            <i className=\"fa fa-user-cog\"/> Create Profile</Link>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n                    </React.Fragment>\r\n            }\r\n        </React.Fragment>\r\n    )\r\n};\r\nexport default Dashboard;\r\n","D:\\finalproject\\client\\src\\modules\\profiles\\edit-profile\\EditProfile.js",["150"],"import React, {useState, useEffect} from 'react';\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport * as profileActions from '../../../redux/profiles/profile.actions';\r\nimport * as profileReducer from '../../../redux/profiles/profile.reducer';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Spinner from \"../../../layout/misc/spinner/Spinner\";\r\n\r\n\r\nlet EditProfile = () => {\r\n    let dispatch = useDispatch();\r\n    let history = useHistory();\r\n\r\n    let [localProfile , setLocalProfile] = useState({\r\n        company : '',\r\n        website : '',\r\n        location : '',\r\n        designation : '',\r\n        skills : '',\r\n        bio : '',\r\n        githubUserName : '',\r\n        youtube : '',\r\n        facebook : '',\r\n        twitter : '',\r\n        linkedin : '',\r\n        instagram : ''\r\n    });\r\n\r\n    let profileInfo = useSelector((state) => {\r\n        return state[profileReducer.profileFeatureKey];\r\n    });\r\n\r\n    let {loading , profile} = profileInfo;\r\n\r\n    useEffect(() => {\r\n        dispatch(profileActions.getProfile());\r\n        setLocalProfile({\r\n            company: profile.company ? profile.company : '',\r\n            location: profile.location ? profile.location : '',\r\n            designation: profile.designation ? profile.designation : '',\r\n            website: profile.website ? profile.website : '',\r\n            githubUserName: profile.githubUserName ? profile.githubUserName : '',\r\n            skills: profile.skills ? profile.skills : '',\r\n            bio: profile.bio ? profile.bio : '',\r\n            youtube : profile && profile.social?.youtube ? profile.social.youtube : '',\r\n            twitter : profile && profile.social?.twitter ? profile.social.twitter : '',\r\n            facebook : profile && profile.social?.facebook ? profile.social.facebook : '',\r\n            instagram : profile && profile.social?.instagram ? profile.social.instagram : '',\r\n            linkedin : profile && profile.social?.linkedin ? profile.social.linkedin : '',\r\n        });\r\n    }, []);\r\n\r\n    let updateInput = (event) => {\r\n        setLocalProfile({\r\n            ...localProfile,\r\n            [event.target.name] : event.target.value\r\n        });\r\n    };\r\n\r\n    let submitUpdateProfile = (event) => {\r\n        event.preventDefault();\r\n        dispatch(profileActions.updateProfile(localProfile , history));\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <section className=\"p-3\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <p className=\"h3 text-teal\">\r\n                                <i className=\"fa fa-user-circle\"/>\r\n                                Edit Profile\r\n                            </p>\r\n                            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Adipisci atque dignissimos distinctio dolor error expedita id incidunt, iusto laborum, molestiae mollitia optio placeat quod recusandae soluta unde, vel! Deserunt, quisquam!</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            {\r\n                loading ? <Spinner/> :\r\n                    <React.Fragment>\r\n                       {/* <pre>{JSON.stringify(localProfile)}</pre>*/}\r\n                        <section>\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-8\">\r\n                                        <form onSubmit={submitUpdateProfile}>\r\n                                            <div className=\"form-group\">\r\n                                                <input\r\n                                                    required\r\n                                                    name=\"company\"\r\n                                                    value={localProfile.company}\r\n                                                    onChange={updateInput}\r\n                                                    type=\"text\" className=\"form-control\" placeholder=\"Company\"/>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <input\r\n                                                    required\r\n                                                    name=\"website\"\r\n                                                    value={localProfile.website}\r\n                                                    onChange={updateInput}\r\n                                                    type=\"text\" className=\"form-control\" placeholder=\"Website\"/>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <input\r\n                                                    required\r\n                                                    name=\"location\"\r\n                                                    value={localProfile.location}\r\n                                                    onChange={updateInput}\r\n                                                    type=\"text\" className=\"form-control\" placeholder=\"Location\"/>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <select\r\n                                                    required\r\n                                                    name=\"designation\"\r\n                                                    value={localProfile.designation}\r\n                                                    onChange={updateInput}\r\n                                                    className=\"form-control\">\r\n                                                    <option value=\"\">Select Designation</option>\r\n                                                    <option value=\"Junior Developer\">Junior Developer</option>\r\n                                                    <option value=\"Senior Developer\">Senior Developer</option>\r\n                                                    <option value=\"Tech Lead\">Tech Lead</option>\r\n                                                    <option value=\"Junior Manager\">Junior Manager</option>\r\n                                                    <option value=\"Senior Manager\">Senior Manager</option>\r\n                                                    <option value=\"Director\">Director</option>\r\n                                                </select>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <input\r\n                                                    required\r\n                                                    name=\"skills\"\r\n                                                    value={localProfile.skills}\r\n                                                    onChange={updateInput}\r\n                                                    type=\"text\" className=\"form-control\" placeholder=\"Skills\"/>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <textarea\r\n                                                    required\r\n                                                    name=\"bio\"\r\n                                                    value={localProfile.bio}\r\n                                                    onChange={updateInput}\r\n                                                    rows=\"3\" className=\"form-control\" placeholder=\"Job Description\"/>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <input\r\n                                                    required\r\n                                                    name=\"githubUserName\"\r\n                                                    value={localProfile.githubUserName}\r\n                                                    onChange={updateInput}\r\n                                                    type=\"text\" className=\"form-control\" placeholder=\"Github UserName\"/>\r\n                                            </div>\r\n                                            <hr/>\r\n                                            <small>Social Links</small>\r\n                                            <div className=\"form-group\">\r\n                                                <input\r\n                                                    required\r\n                                                    name=\"youtube\"\r\n                                                    value={localProfile.youtube}\r\n                                                    onChange={updateInput}\r\n                                                    type=\"text\" className=\"form-control\" placeholder=\"YouTube\"/>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <input\r\n                                                    required\r\n                                                    name=\"twitter\"\r\n                                                    value={localProfile.twitter}\r\n                                                    onChange={updateInput}\r\n                                                    type=\"text\" className=\"form-control\" placeholder=\"Twitter\"/>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <input\r\n                                                    required\r\n                                                    name=\"facebook\"\r\n                                                    value={localProfile.facebook}\r\n                                                    onChange={updateInput}\r\n                                                    type=\"text\" className=\"form-control\" placeholder=\"Facebook\"/>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <input\r\n                                                    required\r\n                                                    name=\"linkedin\"\r\n                                                    value={localProfile.linkedin}\r\n                                                    onChange={updateInput}\r\n                                                    type=\"text\" className=\"form-control\" placeholder=\"LinkedIn\"/>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <input\r\n                                                    required\r\n                                                    name=\"instagram\"\r\n                                                    value={localProfile.instagram}\r\n                                                    onChange={updateInput}\r\n                                                    type=\"text\" className=\"form-control\" placeholder=\"Instagram\"/>\r\n                                            </div>\r\n                                            <div>\r\n                                                <input type=\"submit\" className=\"btn btn-teal btn-sm\" value=\"Update\"/>\r\n                                                <Link to=\"/profiles/dashboard\" className=\"btn bg-light-grey btn-sm\">Back</Link>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n                    </React.Fragment>\r\n            }\r\n            <div style={{marginBottom : '150px'}}/>\r\n        </React.Fragment>\r\n    )\r\n};\r\nexport default EditProfile;\r\n","D:\\finalproject\\client\\src\\modules\\profiles\\create-profile\\CreateProfile.js",[],"D:\\finalproject\\client\\src\\modules\\profiles\\add-education\\AddEducation.js",[],"D:\\finalproject\\client\\src\\modules\\posts\\post-list\\PostList.js",["151"],"import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Link} from 'react-router-dom';\r\nimport * as userReducer from '../../../redux/users/user.reducer';\r\nimport * as postActions from '../../../redux/posts/post.actions';\r\nimport * as postReducer from '../../../redux/posts/post.reducer';\r\nimport Spinner from \"../../../layout/misc/spinner/Spinner\";\r\n\r\nlet PostList = () => {\r\n    let [localPost , setLocalPost] = useState({\r\n        text : '',\r\n        image : ''\r\n    });\r\n\r\n    let dispatch = useDispatch();\r\n\r\n    let userInfo = useSelector((state) => {\r\n        return state[userReducer.usersFeatureKey];\r\n    });\r\n\r\n    let {user} = userInfo;\r\n\r\n    let postInfo = useSelector((state) => {\r\n        return state[postReducer.postsFeatureKey];\r\n    });\r\n\r\n    let {loading , posts} = postInfo;\r\n\r\n    useEffect(() => {\r\n        dispatch(postActions.getAllPosts());\r\n    }, []);\r\n\r\n    let updateInput = (e) => {\r\n        setLocalPost({\r\n            ...localPost,\r\n            [e.target.name] : e.target.value\r\n        });\r\n    };\r\n\r\n    let submitCreatePost = (e) => {\r\n        e.preventDefault();\r\n        dispatch(postActions.createPost(localPost));\r\n        setLocalPost({\r\n            text : '',\r\n            image: ''\r\n        });\r\n    };\r\n\r\n    let clickDeletePost = (postId) => {\r\n        dispatch(postActions.deletePost(postId));\r\n    };\r\n\r\n    let clickLikePost = (postId) => {\r\n        dispatch(postActions.likePost(postId));\r\n    };\r\n\r\n    let clickUnLikePost = (postId) => {\r\n        dispatch(postActions.unlikePost(postId));\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n           {/* <pre>{JSON.stringify(localPost)}</pre>*/}\r\n            <section className=\"p-3\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <p className=\"h3 text-teal\">\r\n                                Welcome to React Social Community\r\n                            </p>\r\n                            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Amet commodi dolores excepturi quaerat qui quia ullam ut voluptas! Aperiam corporis cumque eum harum, impedit necessitatibus nostrum optio rem repellat saepe?</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {\r\n                            Object.keys(user).length > 0 &&\r\n                            <div className=\"col-md-8\">\r\n                                <form onSubmit={submitCreatePost}>\r\n                                    <div className=\"input-group mb-1\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                                            <img src={user.avatar} alt=\"\" width=\"50\" height=\"50\" className=\"rounded-circle\"/>\r\n                                        </span>\r\n                                        </div>\r\n                                        <textarea\r\n                                            required\r\n                                            name=\"text\"\r\n                                            value={localPost.text}\r\n                                            onChange={updateInput}\r\n                                            rows=\"3\" className=\"form-control\" placeholder=\"Whats on your mind..\"/>\r\n                                    </div>\r\n                                    <div className=\"input-group mb-1\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                        <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                                            Image Url\r\n                                        </span>\r\n                                        </div>\r\n                                        <input\r\n                                            required\r\n                                            name=\"image\"\r\n                                            value={localPost.image}\r\n                                            onChange={updateInput}\r\n                                            type=\"text\" className=\"form-control\" placeholder=\"Image Url\"/>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"submit\" className=\"btn btn-teal btn-sm\" value=\"Post\"/>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    <hr/>\r\n                </div>\r\n            </section>\r\n            <section>\r\n                {\r\n                    loading ? <Spinner/> :\r\n                        <React.Fragment>\r\n                            {\r\n                                posts.length > 0 &&\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col\">\r\n                                            {\r\n                                                posts.map(post => {\r\n                                                    return (\r\n                                                        <div className=\"card my-2\" key={post._id}>\r\n                                                            <div className=\"card-body bg-light-grey\">\r\n                                                                <div className=\"row\">\r\n                                                                    <div className=\"col-md-2\">\r\n                                                                        <img src={post.avatar} alt=\"\" className=\"rounded-circle\" width=\"50\" height=\"50\"/><br/>\r\n                                                                        <small>{post.name}</small>\r\n                                                                    </div>\r\n                                                                    <div className=\"col-md-8\">\r\n                                                                        <div className=\"row\">\r\n                                                                            <div className=\"col-md-6\">\r\n                                                                                <img src={post.image} alt=\"\" className=\"img-fluid d-block m-auto\"/>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <p>{post.text}</p>\r\n                                                                        <small>date</small><br/>\r\n                                                                        <button className=\"btn rgba-green-light btn-sm\" onClick={clickLikePost.bind(this,post._id)}>\r\n                                                                            <i className=\"fa fa-thumbs-up\"/> {post.likes.length}\r\n                                                                        </button>\r\n                                                                        <button className=\"btn rgba-red-light btn-sm\" onClick={clickUnLikePost.bind(this,post._id)}>\r\n                                                                            <i className=\"fa fa-thumbs-down\"/>\r\n                                                                        </button>\r\n                                                                        <Link to={`/posts/${post._id}`} className=\"btn rgba-blue-light btn-sm\">\r\n                                                                            <i className=\"fab fa-facebook-messenger\"/> Discussions {post.comments.length}\r\n                                                                        </Link>\r\n                                                                        {\r\n                                                                            post.user === user._id ?\r\n                                                                            <button className=\"btn rgba-amber-light btn-sm\" onClick={clickDeletePost.bind(this,post._id)}>\r\n                                                                                <i className=\"fa fa-times-circle\"/>\r\n                                                                            </button> : null\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </React.Fragment>\r\n                }\r\n            </section>\r\n        </React.Fragment>\r\n    )\r\n};\r\nexport default PostList;\r\n","D:\\finalproject\\client\\src\\modules\\profiles\\add-experience\\AddExperience.js",[],"D:\\finalproject\\client\\src\\modules\\posts\\post-details\\PostDetails.js",["152"],"import React, {useEffect, useState} from 'react';\r\nimport {Link, useParams} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport * as postActions from '../../../redux/posts/post.actions';\r\nimport * as postReducer from '../../../redux/posts/post.reducer';\r\nimport * as userReducer from '../../../redux/users/user.reducer';\r\nimport Spinner from \"../../../layout/misc/spinner/Spinner\";\r\n\r\nlet PostDetails = () => {\r\n    let [comment , setComment] = useState({\r\n        text : ''\r\n    });\r\n\r\n    let dispatch = useDispatch();\r\n    let postId = useParams().postId;\r\n\r\n    let postInfo = useSelector((state) => {\r\n        return state[postReducer.postsFeatureKey];\r\n    });\r\n\r\n    let userInfo = useSelector((state) => {\r\n        return state[userReducer.usersFeatureKey];\r\n    });\r\n\r\n    let {user} = userInfo;\r\n\r\n    let {loading , selectedPost} = postInfo;\r\n\r\n    useEffect(() => {\r\n        dispatch(postActions.getPost(postId));\r\n    }, [postId]);\r\n\r\n    let submitCreateComment = (e) => {\r\n        e.preventDefault();\r\n        dispatch(postActions.createComment(comment , postId));\r\n        setComment({\r\n            text : ''\r\n        });\r\n    };\r\n\r\n    let clickDeleteComment = (commentId) => {\r\n       dispatch(postActions.deleteComment(postId , commentId));\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                loading ? <Spinner/> :\r\n                    <React.Fragment>\r\n                        <section className=\"p-3\">\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        <Link to=\"/posts/list\" className=\"btn bg-light-grey btn-sm\">back</Link>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        {\r\n                                            Object.keys(selectedPost).length > 0 &&\r\n                                            <div className=\"card\">\r\n                                                <div className=\"card-body bg-light-grey\">\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-md-2 text-center\">\r\n                                                            <img src={selectedPost.avatar} alt=\"\" className=\"rounded-circle\" width=\"60\" height=\"60\"/><br/>\r\n                                                            <small>{selectedPost.name}</small>\r\n                                                        </div>\r\n                                                        <div className=\"col-md-8\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-md-6\">\r\n                                                                    <img src={selectedPost.image} alt=\"\" className=\"img-fluid d-block m-auto\"/>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <p>{selectedPost.text}</p>\r\n                                                            <small>{selectedPost.createdAt}</small>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"row mt-3\">\r\n                                                        <div className=\"col\">\r\n                                                            <form onSubmit={submitCreateComment}>\r\n                                                                <div className=\"input-group mb-1\">\r\n                                                                    <div className=\"input-group-prepend\">\r\n                                                                        <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                                                                            <img src={user.avatar} alt=\"\" width=\"50\" height=\"50\" className=\"rounded-circle\"/>\r\n                                                                        </span>\r\n                                                                    </div>\r\n                                                                    <textarea\r\n                                                                        required\r\n                                                                        name=\"text\"\r\n                                                                        value={comment.text}\r\n                                                                        onChange={e => setComment({text : e.target.value})}\r\n                                                                        rows=\"3\" className=\"form-control\" placeholder=\"Whats on your mind..\"/>\r\n                                                                </div>\r\n                                                                <div>\r\n                                                                    <input type=\"submit\" className=\"btn btn-teal btn-sm\" value=\"Comment\"/>\r\n                                                                </div>\r\n                                                            </form>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n\r\n                        <section>\r\n                            { Object.keys(selectedPost).length > 0 &&\r\n                                selectedPost.comments.length > 0 &&\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col\">\r\n                                            {\r\n                                                selectedPost.comments.map(comment => {\r\n                                                    return (\r\n                                                        <div className=\"card mt-3\" key={comment._id}>\r\n                                                            <div className=\"card-body\">\r\n                                                                <div className=\"row\">\r\n                                                                    <div className=\"col-md-2\">\r\n                                                                        <img src={comment.avatar} alt=\"\" className=\"rounded-circle\" width=\"50\" height=\"50\"/>\r\n                                                                        <br/>\r\n                                                                        <small>{comment.name}</small>\r\n                                                                    </div>\r\n                                                                    <div className=\"col-md-8\">\r\n                                                                        <p>{comment.text}</p>\r\n                                                                        {\r\n                                                                            comment.user === user._id ?\r\n                                                                                <button className=\"btn rgba-amber-light btn-sm\" onClick={clickDeleteComment.bind(this,comment._id)}>\r\n                                                                                    <i className=\"fa fa-times-circle\"/>\r\n                                                                                </button> : null\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </section>\r\n                    </React.Fragment>\r\n            }\r\n        </React.Fragment>\r\n    )\r\n};\r\nexport default PostDetails;\r\n","D:\\finalproject\\client\\src\\redux\\users\\user.reducer.js",[],"D:\\finalproject\\client\\src\\util\\userUtil.js",[],"D:\\finalproject\\client\\src\\redux\\alerts\\alert.reducer.js",[],"D:\\finalproject\\client\\src\\redux\\posts\\post.reducer.js",[],"D:\\finalproject\\client\\src\\redux\\profiles\\profile.reducer.js",[],"D:\\finalproject\\client\\src\\redux\\developers\\developer.reducer.js",[],"D:\\finalproject\\client\\src\\util\\authUtil.js",[],"D:\\finalproject\\client\\src\\redux\\profiles\\profile.actions.js",[],"D:\\finalproject\\client\\src\\redux\\alerts\\alert.actions.js",[],"D:\\finalproject\\client\\src\\redux\\developers\\developer.actions.js",[],"D:\\finalproject\\client\\src\\redux\\posts\\post.actions.js",["153"],"import Axios from 'axios';\r\nimport axios from \"axios\";\r\nimport * as alertActions from '../alerts/alert.actions';\r\n\r\nimport * as userUtil from \"../../util/userUtil\";\r\nimport * as authUtil from \"../../util/authUtil\";\r\n\r\nexport const GET_ALL_POSTS_REQUEST = 'GET_ALL_POSTS_REQUEST';\r\nexport const GET_ALL_POSTS_SUCCESS = 'GET_ALL_POSTS_SUCCESS';\r\nexport const GET_ALL_POSTS_FAILURE = 'GET_ALL_POSTS_FAILURE';\r\n\r\nexport const CREATE_POST_REQUEST = 'CREATE_POST_REQUEST';\r\nexport const CREATE_POST_SUCCESS = 'CREATE_POST_SUCCESS';\r\nexport const CREATE_POST_FAILURE = 'CREATE_POST_FAILURE';\r\n\r\nexport const GET_POST_REQUEST = 'GET_POST_REQUEST';\r\nexport const GET_POST_SUCCESS = 'GET_POST_SUCCESS';\r\nexport const GET_POST_FAILURE = 'GET_POST_FAILURE';\r\n\r\nexport const DELETE_POST_REQUEST = 'DELETE_POST_REQUEST';\r\nexport const DELETE_POST_SUCCESS = 'DELETE_POST_SUCCESS';\r\nexport const DELETE_POST_FAILURE = 'DELETE_POST_FAILURE';\r\n\r\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\r\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\r\n\r\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\r\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\r\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\r\n\r\nexport const CREATE_COMMENT_REQUEST = 'CREATE_COMMENT_REQUEST';\r\nexport const CREATE_COMMENT_SUCCESS = 'CREATE_COMMENT_SUCCESS';\r\nexport const CREATE_COMMENT_FAILURE = 'CREATE_COMMENT_FAILURE';\r\n\r\nexport const DELETE_COMMENT_REQUEST = 'DELETE_COMMENT_REQUEST';\r\nexport const DELETE_COMMENT_SUCCESS = 'DELETE_COMMENT_SUCCESS';\r\nexport const DELETE_COMMENT_FAILURE = 'DELETE_COMMENT_FAILURE';\r\n\r\nexport const getAllPosts = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            if(userUtil.isLoggedIn()) {\r\n                let token = userUtil.getToken();\r\n                authUtil.setAuthToken(token);\r\n                dispatch({type : GET_ALL_POSTS_REQUEST});\r\n                let dataUrl = `/api/posts/`;\r\n                let response = await Axios.get(dataUrl);\r\n                dispatch({type : GET_ALL_POSTS_SUCCESS, payload : response.data});\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.error(error);\r\n            dispatch({type : GET_ALL_POSTS_FAILURE , payload : {error : error}});\r\n        }\r\n    };\r\n};\r\n\r\nexport const createPost = (post) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            if(userUtil.isLoggedIn()) {\r\n                let token = userUtil.getToken();\r\n                authUtil.setAuthToken(token);\r\n                dispatch({type : CREATE_POST_REQUEST});\r\n                let dataUrl = `/api/posts/`;\r\n                let response = await Axios.post(dataUrl, post);\r\n                dispatch({type : CREATE_POST_SUCCESS, payload : response.data});\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.error(error);\r\n            dispatch({type : CREATE_POST_FAILURE , payload : {error : error}});\r\n        }\r\n    };\r\n};\r\n\r\n\r\n\r\nexport const getPost = (postId) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            if(userUtil.isLoggedIn()) {\r\n                let token = userUtil.getToken();\r\n                authUtil.setAuthToken(token);\r\n                dispatch({type : GET_POST_REQUEST});\r\n                let dataUrl = `/api/posts/${postId}`;\r\n                let response = await Axios.get(dataUrl);\r\n                dispatch({type : GET_POST_SUCCESS, payload : response.data});\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.error(error);\r\n            dispatch({type : GET_POST_FAILURE , payload : {error : error}});\r\n        }\r\n    };\r\n};\r\n\r\nexport const deletePost = (postId) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            if(userUtil.isLoggedIn()) {\r\n                let token = userUtil.getToken();\r\n                authUtil.setAuthToken(token);\r\n                dispatch({type : DELETE_POST_REQUEST});\r\n                let dataUrl = `/api/posts/${postId}`;\r\n                let response = await Axios.delete(dataUrl);\r\n                dispatch({type : DELETE_POST_SUCCESS, payload : response.data});\r\n                dispatch(alertActions.setAlert('Post is Deleted' , 'success'));\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.error(error);\r\n            dispatch({type : DELETE_POST_FAILURE , payload : {error : error}});\r\n        }\r\n    };\r\n};\r\n\r\nexport const likePost = (postId) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            if(userUtil.isLoggedIn()) {\r\n                let token = userUtil.getToken();\r\n                authUtil.setAuthToken(token);\r\n                dispatch({type : LIKE_POST_REQUEST});\r\n                let dataUrl = `/api/posts/like/${postId}`;\r\n                let response = await Axios.put(dataUrl, postId);\r\n                dispatch({type : LIKE_POST_SUCCESS, payload : response.data});\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.error(error);\r\n            dispatch({type : LIKE_POST_FAILURE , payload : {error : error}});\r\n        }\r\n    };\r\n};\r\n\r\nexport const unlikePost = (postId) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            if(userUtil.isLoggedIn()) {\r\n                let token = userUtil.getToken();\r\n                authUtil.setAuthToken(token);\r\n                dispatch({type : UNLIKE_POST_REQUEST});\r\n                let dataUrl = `/api/posts/unlike/${postId}`;\r\n                let response = await Axios.put(dataUrl, postId);\r\n                dispatch({type : UNLIKE_POST_SUCCESS, payload : response.data});\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.error(error);\r\n            dispatch({type : UNLIKE_POST_FAILURE , payload : {error : error}});\r\n        }\r\n    };\r\n};\r\n\r\nexport const createComment = (comment, postId) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            if(userUtil.isLoggedIn()) {\r\n                let token = userUtil.getToken();\r\n                authUtil.setAuthToken(token);\r\n                dispatch({type : CREATE_COMMENT_REQUEST});\r\n                let dataUrl = `/api/posts/comment/${postId}`;\r\n                let response = await Axios.post(dataUrl, comment);\r\n                dispatch({type : CREATE_COMMENT_SUCCESS, payload : response.data});\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.error(error);\r\n            dispatch({type : CREATE_COMMENT_FAILURE , payload : {error : error}});\r\n        }\r\n    };\r\n};\r\n\r\nexport const deleteComment = (postId, commentId) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            if(userUtil.isLoggedIn()) {\r\n                let token = userUtil.getToken();\r\n                authUtil.setAuthToken(token);\r\n                dispatch({type : DELETE_COMMENT_REQUEST});\r\n                let dataUrl = `/api/posts/comment/${postId}/${commentId}`;\r\n                let response = await Axios.delete(dataUrl);\r\n                dispatch({type : DELETE_COMMENT_SUCCESS, payload : response.data});\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.error(error);\r\n            dispatch({type : DELETE_COMMENT_FAILURE , payload : {error : error}});\r\n        }\r\n    };\r\n};\r\n","D:\\finalproject\\client\\src\\layout\\misc\\spinner\\Spinner.js",[],{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":27,"column":8,"nodeType":"160","endLine":27,"endColumn":10,"suggestions":"161"},{"ruleId":"162","severity":1,"message":"163","line":2,"column":21,"nodeType":"164","messageId":"165","endLine":2,"endColumn":31},{"ruleId":"158","severity":1,"message":"159","line":21,"column":8,"nodeType":"160","endLine":21,"endColumn":21,"suggestions":"166"},{"ruleId":"158","severity":1,"message":"159","line":21,"column":8,"nodeType":"160","endLine":21,"endColumn":10,"suggestions":"167"},{"ruleId":"158","severity":1,"message":"159","line":24,"column":8,"nodeType":"160","endLine":24,"endColumn":10,"suggestions":"168"},{"ruleId":"158","severity":1,"message":"169","line":50,"column":8,"nodeType":"160","endLine":50,"endColumn":10,"suggestions":"170"},{"ruleId":"158","severity":1,"message":"159","line":31,"column":8,"nodeType":"160","endLine":31,"endColumn":10,"suggestions":"171"},{"ruleId":"158","severity":1,"message":"159","line":31,"column":8,"nodeType":"160","endLine":31,"endColumn":16,"suggestions":"172"},{"ruleId":"162","severity":1,"message":"173","line":2,"column":8,"nodeType":"164","messageId":"165","endLine":2,"endColumn":13},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["176"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar",["177"],["178"],["179"],"React Hook useEffect has missing dependencies: 'dispatch' and 'profile'. Either include them or remove the dependency array.",["180"],["181"],["182"],"'axios' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"183","fix":"187"},{"desc":"183","fix":"188"},{"desc":"189","fix":"190"},{"desc":"183","fix":"191"},{"desc":"192","fix":"193"},"Update the dependencies array to be: [dispatch]",{"range":"194","text":"195"},"Update the dependencies array to be: [developerId, dispatch]",{"range":"196","text":"197"},{"range":"198","text":"195"},{"range":"199","text":"195"},"Update the dependencies array to be: [dispatch, profile]",{"range":"200","text":"201"},{"range":"202","text":"195"},"Update the dependencies array to be: [dispatch, postId]",{"range":"203","text":"204"},[1332,1334],"[dispatch]",[774,787],"[developerId, dispatch]",[716,718],[827,829],[2016,2018],"[dispatch, profile]",[934,936],[970,978],"[dispatch, postId]"]